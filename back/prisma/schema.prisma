// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  username  String    @unique
  password  String
  birthDate DateTime
  isDeleted Boolean   @default(false)
  deletedAt DateTime?

  sessionTimeoutInMiliseconds Int              @default(604800000) // 7 days in milliseconds
  Sessions                    Session[]
  roleId                      String?
  Role                        Role?            @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permissions                 UserPermission[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  isRevoked Boolean  @default(false)

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Role {
  id          String           @id @default(uuid())
  name        String           @unique
  description String?
  createdAt   DateTime         @default(now())
  permissions RolePermission[]
  users       User[]
}

model Permission {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  createdAt      DateTime         @default(now())
  roles          RolePermission[]
  UserPermission UserPermission[]
}

model RolePermission {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}

model UserPermission {
  id           String @id @default(uuid())
  userId       String
  permissionId String

  User       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  Permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([userId, permissionId])
}
