services:
  # Serviço para o seu Backend Node.js
  intranet-backend:
    container_name: intranet-backend
    # image: intranet-back:latest
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "3000" # Mapeia a porta 3000 do host para a porta 3000 do contêiner
    env_file:
      - .back.env # Caminho para o arquivo .env do backend
    depends_on:
      - intranet-database # Garante que o banco de dados seja iniciado antes do backend
    networks:
      - intranet-network # Conecta o backend à rede compartilhada


  # Serviço para o Banco de Dados PostgreSQL
  intranet-database:
    container_name: intranet-database
    # image: postgres:13 # Usamos uma versão específica do PostgreSQL para consistência
    image: postgres:13
    env_file:
      - .database.env # Caminho para o arquivo .env do banco de dados
    volumes:
      - ./db_data:/var/lib/postgresql/data # Volume persistente para os dados do banco de dados
    networks:
      - intranet-network # Conecta o banco de dados à rede compartilhada
    # restart: unless-stopped # Opcional: Política de reinício para produção

# Definição dos volumes persistentes
volumes:
  db_data: # Volume para os dados do PostgreSQL

# Definição das redes
networks:
  intranet-network:
    driver: bridge
    name: intranet-network
  
  proxy-intranet-network:
    driver: bridge
    name: proxy-intranet-network

